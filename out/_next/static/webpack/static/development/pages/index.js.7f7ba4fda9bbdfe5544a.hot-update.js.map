{"version":3,"file":"static/webpack/static/development/pages/index.js.7f7ba4fda9bbdfe5544a.hot-update.js","sources":["webpack:///./components/Event.js"],"sourcesContent":["import React from 'react';\nimport EventEdit from './../components/EventEdit.js';\nimport posed, { PoseGroup } from 'react-pose';\nimport './../css/event.css';\n\nclass Event extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      eventEditOpen: true,\n    };\n  }\n\n  handleToolbarItemClick = e => {\n    e.preventDefault();\n\n    const { eventEditOpen } = this.state;\n\n    if (!eventEditOpen) {\n      //Modal is about to be open, pause the slider\n      this.props.slider.slickPause();\n      console.log('pause slider');\n    } else {\n      //Modal is about to be close, play the slider\n      this.props.slider.slickPlay();\n      console.log('play slider');\n    }\n\n    this.setState({\n      eventEditOpen: !eventEditOpen,\n    });\n  };\n\n  render() {\n    const { event } = this.props;\n    const { eventEditOpen } = this.state;\n\n    const EventEditContainer = posed.div({\n      enter: {\n        y: '0',\n        opacity: 1,\n      },\n      exit: {\n        y: '-80%',\n        opacity: 0,\n      },\n    });\n    const EventEditDarkenContainer = posed.div({\n      enter: {\n        opacity: 1,\n      },\n      exit: {\n        opacity: 0,\n      },\n    });\n\n    let eventStyle = {};\n    let eventHeadlineStyle = {};\n\n    if (event.image) {\n      eventStyle.backgroundImage = `url(${event.image})`;\n    }\n    if (event.color) {\n      eventHeadlineStyle.backgroundColor = `${event.color}`;\n    }\n\n    let renderHeadline = event.headline ? (\n      <div className={`eventBox eventHeadline`} style={eventHeadlineStyle}>\n        {event.headline}\n      </div>\n    ) : (\n      ''\n    );\n\n    let renderDescription = event.description ? (\n      <div className={`eventBox eventDesciption`}>{event.description}</div>\n    ) : (\n      ''\n    );\n\n    let renderTime = event.time ? (\n      <div className={`eventBox white eventTime`}>{event.time}</div>\n    ) : (\n      ''\n    );\n\n    let renderLocation = event.location ? (\n      <div className={`eventBox white eventLocation`}>{event.location}</div>\n    ) : (\n      ''\n    );\n\n    let renderHeadlineDescriptionWrapper = (\n      <div className={`headlineDescriptionWrapper`}>\n        {renderHeadline}\n        {renderDescription}\n      </div>\n    );\n\n    let renderTimeLocationWrapper = (\n      <div className={`timeLocationWrapper`}>\n        {renderTime}\n        <div className=\"clearfix\" />\n        {renderLocation}\n      </div>\n    );\n\n    return (\n      <div className={`eventWrapper`}>\n        <div className={`event`} style={eventStyle}>\n          <div className={`eventToolbar`}>\n            <a href=\"#\" onClick={this.handleToolbarItemClick}>\n              <img src={`/static/img/pen.svg`} />\n            </a>\n            <a href=\"#\" onClick={this.handleToolbarItemClick}>\n              <img src={`/static/img/plus.svg`} />\n            </a>\n          </div>\n\n          <PoseGroup>\n            {eventEditOpen ? (\n              <EventEditContainer\n                className={`eventEditWrapper`}\n                key=\"eventEdit\"\n              >\n                <EventEdit toggleModal={this.handleToolbarItemClick} />\n              </EventEditContainer>\n            ) : null}\n          </PoseGroup>\n          <PoseGroup>\n            {eventEditOpen ? (\n              <EventEditDarkenContainer\n                className={`eventEditDarken`}\n                key=\"darken\"\n              />\n            ) : null}\n          </PoseGroup>\n\n          {renderHeadlineDescriptionWrapper}\n          {renderTimeLocationWrapper}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Event;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AASA;AADA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAxBA;AACA;AADA;AAHA;AAMA;AACA;;;AAqBA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAOA;AACA;AAAA;AAKA;AACA;AAAA;AAKA;AACA;AAAA;AAKA;AACA;AAAA;AAMA;AACA;AAAA;AAEA;AAAA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAOA;AACA;AAFA;AAIA;AAAA;AAOA;AACA;AAFA;AAYA;;;;AA3IA;AACA;AA6IA;;;;A","sourceRoot":""}