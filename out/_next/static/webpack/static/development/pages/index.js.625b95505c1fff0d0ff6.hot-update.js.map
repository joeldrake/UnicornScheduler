{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.625b95505c1fff0d0ff6.hot-update.js","sources":["webpack:///./components/Event.js"],"sourcesContent":["import React from 'react';\r\nimport EventEdit from './../components/EventEdit.js';\r\nimport posed, { PoseGroup } from 'react-pose';\r\nimport './../css/event.css';\r\n\r\nclass Event extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      eventEditOpen: false,\r\n    };\r\n  }\r\n\r\n  handleToolbarItemClick = e => {\r\n    e.preventDefault();\r\n\r\n    const { eventEditOpen } = this.state;\r\n\r\n    if (!eventEditOpen) {\r\n      //Modal is about to be open, pause the slider\r\n      this.props.slider.slickPause();\r\n      console.log('pause slider');\r\n    } else {\r\n      //Modal is about to be close, play the slider\r\n      this.props.slider.slickPlay();\r\n      console.log('play slider');\r\n    }\r\n\r\n    this.setState({\r\n      eventEditOpen: !eventEditOpen,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { event } = this.props;\r\n    const { eventEditOpen } = this.state;\r\n\r\n    const EventEditContainer = posed.div({\r\n      enter: {\r\n        y: '0',\r\n        opacity: 1,\r\n      },\r\n      exit: {\r\n        y: '-80%',\r\n        opacity: 0,\r\n      },\r\n    });\r\n    const EventEditDarkenContainer = posed.div({\r\n      enter: {\r\n        opacity: 1,\r\n      },\r\n      exit: {\r\n        opacity: 0,\r\n      },\r\n    });\r\n\r\n    let eventStyle = {};\r\n    let eventHeadlineStyle = {};\r\n\r\n    if (event.image) {\r\n      eventStyle.backgroundImage = `url(${event.image})`;\r\n    }\r\n    if (event.color) {\r\n      eventHeadlineStyle.backgroundColor = `${event.color}`;\r\n    }\r\n\r\n    let renderHeadline = event.headline ? (\r\n      <div className={`eventBox eventHeadline`} style={eventHeadlineStyle}>\r\n        {event.headline}\r\n      </div>\r\n    ) : (\r\n      ''\r\n    );\r\n\r\n    let renderDescription = event.description ? (\r\n      <div className={`eventBox eventDesciption`}>{event.description}</div>\r\n    ) : (\r\n      ''\r\n    );\r\n\r\n    let renderTime = event.time ? (\r\n      <div className={`eventBox white eventTime`}>{event.time}</div>\r\n    ) : (\r\n      ''\r\n    );\r\n\r\n    let renderLocation = event.location ? (\r\n      <div className={`eventBox white eventLocation`}>{event.location}</div>\r\n    ) : (\r\n      ''\r\n    );\r\n\r\n    let renderHeadlineDescriptionWrapper = (\r\n      <div className={`headlineDescriptionWrapper`}>\r\n        {renderHeadline}\r\n        {renderDescription}\r\n      </div>\r\n    );\r\n\r\n    let renderTimeLocationWrapper = (\r\n      <div className={`timeLocationWrapper`}>\r\n        {renderTime}\r\n        <div className=\"clearfix\" />\r\n        {renderLocation}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={`eventWrapper`}>\r\n        <div className={`event`} style={eventStyle}>\r\n          <div className={`eventToolbar`}>\r\n            <a href=\"#\" onClick={this.handleToolbarItemClick}>\r\n              <img src={`/static/img/pen.svg`} />\r\n            </a>\r\n            <a href=\"#\" onClick={this.handleToolbarItemClick}>\r\n              <img src={`/static/img/plus.svg`} />\r\n            </a>\r\n          </div>\r\n\r\n          <PoseGroup>\r\n            {eventEditOpen ? (\r\n              <EventEditContainer\r\n                className={`eventEditWrapper`}\r\n                key=\"eventEdit\"\r\n              >\r\n                <EventEdit firebase={this.props.firebase} toggleModal={this.handleToolbarItemClick} />\r\n              </EventEditContainer>\r\n            ) : null}\r\n          </PoseGroup>\r\n          <PoseGroup>\r\n            {eventEditOpen ? (\r\n              <EventEditDarkenContainer\r\n                className={`eventEditDarken`}\r\n                key=\"darken\"\r\n              />\r\n            ) : null}\r\n          </PoseGroup>\r\n\r\n          {renderHeadlineDescriptionWrapper}\r\n          {renderTimeLocationWrapper}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AASA;AADA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAxBA;AACA;AADA;AAHA;AAMA;AACA;;;AAqBA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAOA;AACA;AAAA;AAKA;AACA;AAAA;AAKA;AACA;AAAA;AAKA;AACA;AAAA;AAMA;AACA;AAAA;AAEA;AAAA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAOA;AACA;AAFA;AAIA;AAAA;AAAA;AAOA;AACA;AAFA;AAYA;;;;AA3IA;AACA;AA6IA;;;;A","sourceRoot":""}